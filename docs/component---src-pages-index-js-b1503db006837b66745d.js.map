{"version":3,"file":"component---src-pages-index-js-b1503db006837b66745d.js","mappings":"+NAQA,MAAMA,EAAc,KAIlBC,OAAOC,MAAM,eAAe,EAsC9B,UAjCkB,IAAyB,IAAD,MAAvB,KAAEC,EAAI,SAAEC,GAAU,EACnC,MAAMC,GAAkC,QAAtB,EAAAF,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBC,QAAK,QACzCC,EAAON,EAAKO,kBAAkBC,MAAMC,MAG1C,OACE,gBAAC,IAAM,CAACR,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAG,MAEJ,uBAAKQ,MAAO,CAAEC,QAAS,OAAQC,eAAgB,WAE7C,0BACEC,QAAShB,EACTa,MAAO,CACLI,gBAAiB,UACjBC,SAAU,OACVC,QAAS,cAEZ,SAMH,2BACEC,wBAAyB,CAAEC,OAAQZ,EAAKa,MACxCC,SAAS,gBAEJ,EAYN,MAAMC,EAAO,IAAM,gBAAC,IAAG,CAAChB,MAAM,a","sources":["webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\n\nconst handleOrder = () => {\n  // 주문 처리 로직을 여기에 구현하고 성공한 경우 팝업 메시지를 표시합니다.\n  // 예시로 간단하게 팝업 메시지를 표시하고자 window.alert를 사용합니다.\n  // 실제로는 좀 더 복잡한 팝업 컴포넌트나 라이브러리를 사용하는 것을 권장합니다.\n  window.alert('상품이 주문되었습니다.');\n};\n\n\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const post = data.allMarkdownRemark.nodes.pop()\n\n \n  return (\n    <Layout location={location} title={siteTitle}>\n      <Bio />\n\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        {/* 주문하기 버튼 */}\n        <button\n          onClick={handleOrder}\n          style={{\n            backgroundColor: 'skyblue',\n            fontSize: '5rem',\n            padding: '1rem 2rem'\n          }}\n        >\n          주문하기\n        </button>\n      </div>\n\n\n      <section\n        dangerouslySetInnerHTML={{ __html: post.html }}\n        itemProp=\"articleBody\"\n      />\n    </Layout>\n    )\n  \n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        html\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n\n\n\n"],"names":["handleOrder","window","alert","data","location","siteTitle","site","siteMetadata","title","post","allMarkdownRemark","nodes","pop","style","display","justifyContent","onClick","backgroundColor","fontSize","padding","dangerouslySetInnerHTML","__html","html","itemProp","Head"],"sourceRoot":""}